@model Website.Models.DTOs.Properties.PropertyDetailDTO
@{
    ViewData["Title"] = "Property Details";
}
@section Scripts {
    <script src="@Url.Content("~/js/Tenant/createTenantModal.js")"></script>

    <script type="text/javascript">
        $(document).ready(() => {
            console.log("GetPropertyById called");

            let url = location.href.replace(/\/$/, "");

            if (location.hash) {
                const hash = url.split("#");
                $('#nav-tab a[href="#' + hash[1] + '"]').tab("show");
                url = location.href.replace(/\/#/, "#");
                history.replaceState(null, null, url);
                setTimeout(() => {
                    $(window).scrollTop(0);
                }, 400);
            }

            $('a[data-toggle="tab"]').on("click", function () {
                let newUrl;
                const hash = $(this).attr("href");
                if (hash == "#nav-home") {
                    newUrl = url.split("#")[0];
                } else {
                    newUrl = url.split("#")[0] + hash;
                }
                newUrl += "/";
                history.replaceState(null, null, newUrl);
            });
        });
    </script>
}
@functions{
    string Title()
    {
        var sb = new System.Text.StringBuilder();
        if (!string.IsNullOrEmpty(Model.Address.Line1))
        {
            sb.Append(Model.Address.Line1);
        }
        if (!string.IsNullOrEmpty(Model.Address.Line2))
        {
            sb.Append(",");
            sb.Append(Model.Address.Line2);
        }
        if (!string.IsNullOrEmpty(Model.Address.Line3))
        {
            sb.Append(",");
            sb.Append(Model.Address.Line3);
        }
        return sb.ToString();
    }
}

<h1>
    @Title()
</h1>

<div>
    <h4>Property Details</h4>
    <hr />

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Details</a>
            <a class="nav-item nav-link" id="nav-document-tab" data-toggle="tab" href="#nav-document" role="tab" aria-controls="nav-document" aria-selected="false">Documents</a>
            <a class="nav-item nav-link" id="nav-tenant-tab" data-toggle="tab" href="#nav-tenant" role="tab" aria-controls="nav-tenant" aria-selected="false">Tenants</a>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="container row">
                <dl class="col-md-9">
                    @Html.HiddenFor(x => x.Portfolio.Id, new { @id = "portfolio_id" })
                    @Html.HiddenFor(x => x.Id, new { @id = "property_id" })
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.PurchaseDate)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.PurchaseDate)
                        </dd>
                    </div>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.PropertyValue)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.PropertyValue)
                        </dd>
                    </div>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Address)
                    </dt>
                    <dd class="col-sm-10">
                        <dl>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.Line1)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.Line1)</dd>
                            </div>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.Line2)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.Line2)</dd>
                            </div>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.Line3)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.Line3)</dd>
                            </div>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.Postcode)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.Postcode)</dd>
                            </div>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.Town)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.Town)</dd>
                            </div>
                            <div class="row">
                                <dt class="col-sm-2 small text-muted text-uppercase">@Html.DisplayNameFor(address => address.Address.City)</dt>
                                <dd class="col-sm-10">@Html.DisplayFor(address => address.Address.City)</dd>
                            </div>
                        </dl>
                    </dd>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.MonthlyRentAmount)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.MonthlyRentAmount)
                        </dd>
                    </div>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.NoOfRooms)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.NoOfRooms)
                        </dd>
                    </div>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Description)
                        </dd>
                    </div>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.CreatedDate)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.CreatedDate)
                        </dd>
                    </div>
                    <div class="row">
                        <dt class="col-sm-2 small text-muted text-uppercase">
                            @Html.DisplayNameFor(model => model.UpdatedDate)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.UpdatedDate)
                        </dd>
                    </div>

                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(x => x.Images)
                    </dt>
                    <dd class="col-sm-10 table-responsive">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(x => x.Images.First().FileName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(x => x.Images.First().FileType)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(x => x.Images.First().CreatedDate)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Images.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(x => x.Images[i].FileName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => x.Images[i].FileType)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => x.Images[i].CreatedDate)
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </dd>
                </dl>
                @if (Model.Images.Any())
                {
                    <div class="col-md-3">
                        <div class="carousel slide" data-ride="carousel" data-interval="2000">
                            <div class="carousel-inner">
                                @foreach (var image in Model.Images)
                                {
                                    <div class="carousel-item @(image == Model.Images.First() ? "active" : "")">
                                        <img src="@image.FilePath" class="img-thumbnail" alt="Property Image" style="max-width:340px; height:auto;">
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <div class="tab-pane fade" id="nav-document" role="tabpanel" aria-labelledby="nav-document-tab">
            @await Html.PartialAsync("/Views/Property/Partial/_PropertyDocumentList.cshtml", Model.Documents, new ViewDataDictionary(ViewData) { { "PropertyId", Model.Id } })
        </div>
        <div class="tab-pane fade" id="nav-tenant" role="tabpanel" aria-labelledby="nav-tenant-tab">
            @await Html.PartialAsync("/Views/Tenants/_TenantDetail.cshtml", Model.Tenants)
            <button type="button" class="btn btn-primary" data-toggle="modal" id="tenantCreateButton" data-target="#tenantCreateModal" data-url='@Url.Action("Create", "Tenants")'>
                Add Tenant
            </button>

            <!-- Modal -->
            <div class="modal fade" id="tenantCreateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Create Tenant</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="configureBody"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" id="tenantCreateSave" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-portfolioId="@Model.Portfolio.Id" asp-route-propertyId="@Model.Id" class="btn btn-primary">Edit</a>
    <a asp-action="Delete" asp-route-portfolioId="@Model.Portfolio.Id" asp-route-propertyId="@Model.Id" class="btn btn-danger">Delete</a>
    <a asp-action="Details" asp-controller="Portfolio" asp-route-id="@Model.Portfolio.Id" class="btn btn-light">Back to List</a>
</div>