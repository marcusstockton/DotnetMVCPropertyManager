@model Website.Models.DTOs.Properties.PropertyDetailDTO
@{
    ViewData["Title"] = "Property Details";
}
<style>
    /*dd {
        margin: 0;
    }

        dd::after {
            content: '\A';
            white-space: pre-line;
        }

        dd:last-of-type::after {
            content: '';
        }

    dd, dt {
        display: inline;
    }

    dd, dt, .address {
        vertical-align: middle;
    }

    dt {
        font-weight: bolder;
    }

        dt::after {
            content: ': ';
        }

    .address {
        display: inline-block;
        white-space: pre;
    }

    .ui-autocomplete {
        z-index: 5000;
        max-height: 60vh;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }
    .ui-autocomplete-loading { background:url(http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/smoothness/images/ui-anim_basic_16x16.gif) no-repeat right center }*/

</style>
@functions {
    string Title()
    {
        if (Model != null)
        {
            var sb = new System.Text.StringBuilder();
            if (!string.IsNullOrEmpty(Model.Address?.Line1))
            {
                sb.Append(Model.Address.Line1);
            }
            if (!string.IsNullOrEmpty(Model.Address?.Line2))
            {
                sb.Append(Environment.NewLine);
                sb.Append(Model.Address.Line2);
            }
            if (!string.IsNullOrEmpty(Model.Address?.Line3))
            {
                sb.Append(Environment.NewLine);
                sb.Append(Model.Address.Line3);
            }
            return sb.ToString();
        }
        return "";
    }
}
<div class="row">
    <div col-sm-6>
        <h1>
            @Title()
        </h1>
    </div>
    <div class="col-sm-6">
        <div class="float-right">
            <div class="btn-group" role="group" aria-label="Basic example">
                <a asp-action="Edit" asp-route-portfolioId="@Model.Portfolio.Id" asp-route-propertyId="@Model.Id" class="btn btn-primary btn-sm"
                   data-toggle="tooltip" data-placement="top" title="Edit Portfolio">
                    <span class="material-icons">
                        edit
                    </span>
                </a>
                <a asp-action="Delete" asp-route-portfolioId="@Model.Portfolio.Id" asp-route-propertyId="@Model.Id" class="btn btn-danger btn-sm"
                   data-toggle="tooltip" data-placement="top" title="Delete Portfolio">
                    <span class="material-icons">
                        delete_forever
                    </span>
                </a>
                <a asp-action="Details" asp-controller="Portfolio" asp-route-id="@Model.Portfolio.Id" class="btn btn-light btn-sm"
                   data-toggle="tooltip" data-placement="top" title="Back to list">
                    <span class="material-icons">
                        arrow_back
                    </span>
                </a>
            </div>
        </div>
    </div>
</div>

<div>
    <h4>Property Details</h4>
    <hr />

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Details</a>
            <a class="nav-item nav-link" id="nav-images-tab" data-toggle="tab" href="#nav-images" role="tab" aria-controls="nav-images" aria-selected="false">Images <span class="badge badge-pill badge-primary">@Model.Images.Count</span></a>

            <a class="nav-item nav-link" id="nav-document-tab" data-toggle="tab" href="#nav-document" role="tab" aria-controls="nav-document" aria-selected="false">Documents <span class="badge badge-pill badge-primary">@Model.Documents.Count</span></a>
            <a class="nav-item nav-link" id="nav-tenant-tab" data-toggle="tab" href="#nav-tenant" role="tab" aria-controls="nav-tenant" aria-selected="false">Tenants <span class="badge badge-pill badge-primary">@Model.Tenants.Count</span></a>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            @Html.HiddenFor(x => x.Portfolio.Id, new { @id = "portfolio_id" })
            @Html.HiddenFor(x => x.Id, new { @id = "property_id" })
            @Html.HiddenFor(x => x.Address.Latitude)
            @Html.HiddenFor(x => x.Address.Longitude)
            <div class="row">
                <div class="col-md-8">
                    <dl>
                        <dt>@Html.DisplayNameFor(model => model.PurchaseDate)</dt>
                        <dd>@Html.DisplayFor(model => model.PurchaseDate)</dd>

                        <dt>@Html.DisplayNameFor(model => model.PropertyValue)</dt>
                        <dd>@Html.DisplayFor(model => model.PropertyValue)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Address)</dt>
                        <dd>
                            <dl style="padding-left:15px;">
                                <dt>@Html.DisplayNameFor(address => address.Address.Line1)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.Line1)</dd>
                                <dt>@Html.DisplayNameFor(address => address.Address.Line2)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.Line2)</dd>
                                <dt>@Html.DisplayNameFor(address => address.Address.Line3)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.Line3)</dd>
                                <dt>@Html.DisplayNameFor(address => address.Address.Postcode)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.Postcode)</dd>
                                <dt>@Html.DisplayNameFor(address => address.Address.Town)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.Town)</dd>
                                <dt>@Html.DisplayNameFor(address => address.Address.City)</dt>
                                <dd>@Html.DisplayFor(model => model.Address.City)</dd>
                            </dl>
                        </dd>
                    </dl>
                </div>
                <div class="col-md-4">
                    <img src="#" alt="Postcode image" hidden="hidden" id="postcodeImg" class="img-thumbnail" />
                </div>
            </div>
            <div class="row">
                <dl>
                    <dt>@Html.DisplayNameFor(model => model.MonthlyRentAmount)</dt>
                    <dd>@Html.DisplayFor(model => model.MonthlyRentAmount)</dd>

                    <dt>@Html.DisplayNameFor(model => model.NoOfRooms)</dt>
                    <dd>@Html.DisplayFor(model => model.NoOfRooms)</dd>

                    <dt>@Html.DisplayNameFor(model => model.Description)</dt>
                    <dd>@Html.DisplayFor(model => model.Description)</dd>

                    <dt>@Html.DisplayNameFor(model => model.UpdatedDate)</dt>
                    <dd>@Html.DisplayFor(model => model.UpdatedDate)</dd>
                    <dt>@Html.DisplayNameFor(model => model.CreatedDate)</dt>
                    <dd>@Html.DisplayFor(model => model.CreatedDate)</dd>
                </dl>
            </div>

            @*
                <div class="row">
                <dt class="col-sm-2 small text-muted text-uppercase">
                @Html.DisplayNameFor(model => model.MonthlyRentAmount)
                </dt>
                <dd class="col-sm-10">
                @Html.DisplayFor(model => model.MonthlyRentAmount)
                </dd>
                </div>
                <div class="row">
                <dt class="col-sm-2 small text-muted text-uppercase">
                @Html.DisplayNameFor(model => model.NoOfRooms)
                </dt>
                <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NoOfRooms)
                </dd>
                </div>
                <div class="row">
                <dt class="col-sm-2 small text-muted text-uppercase">
                @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
                </dd>
                </div>
                <div class="row">
                <dt class="col-sm-2 small text-muted text-uppercase">
                @Html.DisplayNameFor(model => model.CreatedDate)
                </dt>
                <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatedDate)
                </dd>
                </div>
                <div class="row">
                <dt class="col-sm-2 small text-muted text-uppercase">
                @Html.DisplayNameFor(model => model.UpdatedDate)
                </dt>
                <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UpdatedDate)
                </dd>
                </div>

                <dt class="col-sm-2">
                @Html.DisplayNameFor(x => x.Images)
                </dt>
                <dd class="col-sm-10 table-responsive">

                <table class="table">
                <thead>
                <tr>
                <th>
                @Html.DisplayNameFor(x => x.Images.First().FileName)
                </th>
                <th>
                @Html.DisplayNameFor(x => x.Images.First().FileType)
                </th>
                <th>
                @Html.DisplayNameFor(x => x.Images.First().CreatedDate)
                </th>
                </tr>
                </thead>
                <tbody>
                @for (int i = 0; i < Model.Images.Count; i++)
                {
                <tr>
                <td>
                @Html.DisplayFor(x => x.Images[i].FileName)
                </td>
                <td>
                @Html.DisplayFor(x => x.Images[i].FileType)
                </td>
                <td>
                @Html.DisplayFor(x => x.Images[i].CreatedDate)
                </td>
                </tr>
                }
                </tbody>
                </table>
                </dd>
                </dl>

                </div>*@
        </div>
        <div class="tab-pane fade" id="nav-images" role="tabpanel" aria-labelledby="nav-images-tab">
            @await Html.PartialAsync("/Views/Property/Partial/_PropertyImages.cshtml", Model.Images, new ViewDataDictionary(ViewData) { { "PropertyId", Model.Id } })
        </div>
        <div class="tab-pane fade" id="nav-document" role="tabpanel" aria-labelledby="nav-document-tab">
            @await Html.PartialAsync("/Views/Property/Partial/_PropertyDocumentList.cshtml", Model.Documents, new ViewDataDictionary(ViewData) { { "PropertyId", Model.Id } })
        </div>
        <div class="tab-pane fade" id="nav-tenant" role="tabpanel" aria-labelledby="nav-tenant-tab">
            @await Html.PartialAsync("/Views/Tenants/_TenantDetail.cshtml", Model.Tenants)
            <button type="button" class="btn btn-primary" data-toggle="modal" id="tenantCreateButton" data-target="#tenantCreateModal" data-url='@Url.Action("Create", "Tenants")'>
                <span class="material-icons">add</span> Add Tenant
            </button>

            <!-- Modal -->
            @await Html.PartialAsync("/Views/Tenants/Modals/_tenantCreateModal.cshtml")
        </div>
        <div style="padding-top:10px;">
            <a asp-controller="Property" asp-action="Edit" asp-route-portfolioId="@Model.Portfolio.Id" asp-route-propertyId="@Model.Id" class="btn btn-info">Edit</a>
            <a asp-controller="Portfolio" asp-action="Details" asp-route-id="@Model.Portfolio.Id" class="btn btn-default">Back</a>
        </div>
    </div>
</div>
@section Scripts {
    <script src="@Url.Content("~/js/Tenant/createTenantModal.js")"></script>
    <script src="~/js/property/property-detail.js" asp-append-version="true"></script>

}