@model IEnumerable<Website.Models.PropertyImage>

@if (!Model.Any())
{
    <p>No Images Uploaded for this property.</p>
}
else
{
    <div class="col-md-9 offset-1">
        <div id="propertyImageCarousel" class="carousel carousel-dark slide carousel-fade" data-bs-ride="carousel">
            <div class="carousel-inner">
                @foreach (var image in Model)
                {
                    <div class="carousel-item @(image == Model.First() ? "active" : "")" data-bs-interval="10000">
                        <img src="@image.FilePath" class="d-block w-100 img-fluid" alt="Property Image" style="display: block; width: auto; height: 60vh;">
                        @if (!string.IsNullOrEmpty(image.Description))
                        {
                            <div class="carousel-caption d-none d-md-block">
                                <h3>Details:</h3>
                                <h5>@image.Description</h5>
                            </div>
                        }
                    </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#propertyImageCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#propertyImageCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>

    </div>

}

<style type="text/css">
    .carousel-control-prev:hover, .carousel-control-next:hover {
        background-color: rgba(204, 204, 204, 0.5);
    }

    .carousel-caption{
        background-color: rgba(204, 204, 204, 0.6);
        margin-left: calc(-100vw / 2 + 500px / 2);
        margin-right: calc(-100vw / 2 + 500px / 2);
    }
</style>